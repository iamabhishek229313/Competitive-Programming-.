// Not Solved 
//   Question link : https://www.hackerearth.com/practice/basic-programming/input-output/basics-of-input-output/practice-problems/algorithm/magical-word/


#include <iostream>
#include <string>
#include <cstdlib>
using namespace std ;
int binarySearch(int arr[] , int size , int key){
    int lowIndex = 0 ;
    int highIndex = size-1;
    int midIndex = (lowIndex + highIndex) / 2 ;
    while((highIndex>=lowIndex) && (midIndex != lowIndex) && (midIndex != highIndex)){
        if(key == arr[midIndex]) return midIndex ;
        else if (key > arr[midIndex]){
            lowIndex = midIndex + 1 ;
            midIndex = (lowIndex + highIndex) / 2 ;
            if(arr[midIndex] == key ) return midIndex ;
        }
        else if (key < arr[midIndex]){
            highIndex = midIndex -1 ;
            midIndex = (lowIndex + highIndex) / 2 ;
            if(arr[midIndex] == key ) return midIndex ;
        }
    }
    return midIndex ;
}



int main(){
    int test_cases ;
    int myWorld[13] = {67,71,73,79,83,89,97,101,103,107,109,113,127};
    while(test_cases--){
        int length ;
        cin>>length ;
        string s ;
        getline(cin,s) ; 
        for(int i = 0 ; i<length ;i++){
            int midResultedIndex = binarySearch(myWorld,13,s[i]);
            if(s[i] == myWorld[midResultedIndex]){
                s[i] = myWorld[midResultedIndex];
            }
            else if(abs(s[i]-myWorld[midResultedIndex-1]) < abs(s[i]-myWorld[midResultedIndex-1])){
                s[i] = myWorld[midResultedIndex-1];
            }
            else if(abs(s[i]-myWorld[midResultedIndex-1]) > abs(s[i]-myWorld[midResultedIndex-1])){
                s[i] = myWorld[midResultedIndex+1];
            }
            else if(abs(s[i]-myWorld[midResultedIndex-1]) == abs(s[i]-myWorld[midResultedIndex-1])){
                s[i] = myWorld[midResultedIndex-1] ;
            }
        }
        cout<<s<<endl;
    }
    return 0 ;
}

